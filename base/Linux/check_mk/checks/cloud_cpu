cloud_cpu_percentused_default_levels = (80, 90)

def inventory_cloud_cpu(info):
    inventory = []
    for line in info:
        zonename = line[0]
        inventory.append( (zonename, 'cloud_cpu_percentused_default_levels') )
    return inventory

def check_cloud_cpu(item, params, info):
    warn, crit = cloud_cpu_percentused_default_levels
    for line in info:
        zonename = line[0]
        if zonename == item:
            percentused = float(line[2])
            capacityused = (int(line[3]))
            capacitytotal = (int(line[4]))

            if percentused > crit:
                STATE = 2
            elif percentused > warn:
                STATE = 1
            else:
                STATE = 0

            STATE_TXT = "{0:.2f}% used ( {1} of {2} MHz ),(levels at {3}/{4} %)".format(percentused, capacityused, capacitytotal, warn, crit)
            perfdata = [ ( "cloud cpu percentused", percentused, warn, crit, 0, 100 ) ]
            return (STATE, STATE_TXT, perfdata)

check_info["cloud_cpu"] = {
    "inventory_function"  : inventory_cloud_cpu,
    "check_function"      : check_cloud_cpu,
    "has_perfdata"        : True,
    "service_description" : "cloud cpu percentused of %s"
}
