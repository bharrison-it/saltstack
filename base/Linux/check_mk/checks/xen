#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
xen_mem_default_levels = (80, 90)
def inventory_xen_mem(info):
    return [(None, 'xen_mem_default_levels')]

def check_xen_mem(item, params, info):
    warn = 80
    crit = 90
    for line in info:
        if 'free_memory' in line:
            free_mem = int(line[-1]) / 1024
        if 'total_memory' in line:
            total_mem = int(line[-1]) / 1024
    used_mem = total_mem -free_mem
    percent = float(used_mem / total_mem * 100)
    if percent > crit:
        state = 2
        state_txt = "CRIT - {0:.2f} % used, ({1}/{2} GB), (levels at {3}/{4} %)".format(percent, used_mem, total_mem, warn, crit)
    elif percent > warn and percent < crit:
        state = 1
        state_txt = "WARN - {0} % used, ({1}/{2} GB), (levels at {3}/{4} %)".format(percent, used_mem, total_mem, warn, crit)
    else:
        state = 0
        state_txt = "OK - {0} % used, ({1}/{2} GB), (levels at {3}/{4} %)".format(percent, used_mem, total_mem, warn, crit)
    return (state, state_txt)

check_info['xen.mem'] = {
    "check_function"          : check_xen_mem,
    "inventory_function"      : inventory_xen_mem,
    "service_description"     : "Xen Memory used",
    "has_perfdata"            : True,
    "default_levels_variable" : "xen_mem_default_levels",
}
