#!/usr/bin/python
# check_mk_agent plugin for CloudStack Capacity check
# /etc/check_mk/cloud_manager.ini:
# [cloudstack]
# api=http://localhost:8080/client/api
# apikey=xxxxxxxxx
# secret=xxxxxxxxx

import os, sys
import CloudStack
import ConfigParser

def cs_client(): 
  cloud_manager_conf = '/etc/check_mk/cloud_manager.ini'
  if not os.path.exists(cloud_manager_conf):
       sys.exit(0)

  cf = ConfigParser.ConfigParser()
  cf.read(cloud_manager_conf)
  api = cf.get('cloudstack', 'api')
  apikey = cf.get('cloudstack', 'apikey')
  secret = cf.get('cloudstack', 'secret')
  cs_client = CloudStack.Client(api, apikey, secret)
  return cs_client 

def get_cloud_capacity():
  cs = cs_client()
  response = cs.listCapacity()
  capacity = response['capacity']
  data = {}
  for cap in capacity:
      type = cap['type']
      info = "{0} {1} {2} {3}".format(cap['zonename'], cap['percentused'], cap['capacityused'], cap['capacitytotal'])
      data.setdefault(type, []).extend([info])
  return data

def print_cmk_data():
  cap = get_cloud_capacity()
  for type in cap.keys():
      print "<<<{0}>>>".format(map[str(type)])
      for i in cap[type]:
          print i

map = {
    '0': 'MEMORY',
    '1': 'CPU',
    '2': 'STORAGE',
    '3': 'STORAGE_ALLOCATED',
    '4': 'VIRTUAL_NETWORK_PUBLIC_IP',
    '5': 'PRIVATE_IP',
    '6': 'SECONDARY_STORAGE',
    '7': 'VLAN',
    '8': 'DIRECT_ATTACHED_PUBLIC_IP',
    '9': 'LOCAL_STORAGE'
}

print_cmk_data()
