#!/usr/bin/python
import os, sys
import CloudStack
import ConfigParser

def get_cloud_zones():
  if not os.path.exists('/etc/check_mk/cloud_manager.ini'):
       sys.exit(0)

  cf = ConfigParser.ConfigParser()
  cf.read('/etc/check_mk/cloud_manager.ini')
  api = cf.get('cloudstack', 'api')
  apikey = cf.get('cloudstack', 'apikey')
  secret = cf.get('cloudstack', 'secret')
  cs = CloudStack.Client(api, apikey, secret)

  zones = cs.listZones()
  map = {
    '0': 'memory',
    '1': 'cpu',
    '2': 'storage',
    '3': 'storage_allocated',
    '4': 'virtual_network_public_ip',
    '5': 'private_ip',
    '6': 'secondary_storage',
    '7': 'vlan',
    '8': 'direct_attached_public_ip',
    '9': 'local_storage'
  }
  for type in range(0,9):
      id = str(type)
      print '<<<cloud_{0}>>>'.format(map[id])
      for zone in zones:
          zoneid = zone['id']
          response = cs.listCapacity({'zoneid': zoneid, 'type': id})
          cap = response['capacity'][0]
          info = "{0} {1} {2} {3} {4}".format(cap['zonename'],cap['type'], cap['percentused'], cap['capacityused'], cap['capacitytotal'])
          print info

get_cloud_zones()
